<?xml version="1.0" encoding="UTF-8"?>
<root BTCPP_format="4"
      main_tree_to_execute="NominalMission">
  <BehaviorTree ID="NominalMission">
    <SequenceWithMemory>
      <GoTo name="Waypoint1"
            lat="49.8605441"
            lon="8.6763816"
            alt="{@altitude_amsl_m}"/>
      <GoTo name="Waypoint2"
            lat="49.8606396"
            lon="8.6765291"
            alt="{@altitude_amsl_m}"
            _onSuccess="@is_approaching_landing = true"/>
      <Land name="LandAtStopover"
            _onSuccess="@next_landing_site_id = 1;&#10;@is_approaching_landing = false"/>
      <EnableHold/>
      <Disarm/>
      <Sleep name="Stopover"
             msec="3000"/>
      <Arm wait_until_ready_to_arm="true"/>
      <Takeoff name="LeaveStopover"
               alt="{@altitude_amsl_m}"/>
      <GoTo name="Waypoint3"
            lat="49.860685"
            lon="8.676366"
            alt="{@altitude_amsl_m}"
            _onSuccess="@is_approaching_landing = true"/>
      <GoTo name="Waypoint4"
            lat="49.8606393"
            lon="8.6761878"
            alt="{@altitude_amsl_m}"/>
      <Land name="ArriveAtDestination"
            _onSuccess="@next_landing_site_id = 2;&#10;@is_approaching_landing = false"/>
    </SequenceWithMemory>
  </BehaviorTree>

  <!-- Description of Node Models (used by Groot) -->
  <TreeNodesModel>
    <Action ID="Arm">
      <input_port name="wait_until_ready_to_arm"
                  default="true"
                  type="bool">Wait for the UAV to be ready for arming. If false and UAV is not ready to arm, will be rejected.</input_port>
      <input_port name="action_name"
                  default="__default__placeholder__"
                  type="std::string">Action server name</input_port>
    </Action>
    <Action ID="Disarm">
      <input_port name="action_name"
                  default="__default__placeholder__"
                  type="std::string">Action server name</input_port>
    </Action>
    <Action ID="EnableHold">
      <input_port name="action_name"
                  default="__default__placeholder__"
                  type="std::string">Action server name</input_port>
    </Action>
    <Action ID="GoTo">
      <input_port name="lat"
                  type="double">Target latitude</input_port>
      <input_port name="lon"
                  type="double">Target longitude</input_port>
      <input_port name="alt"
                  type="double">Target altitude in meter (AMSL)</input_port>
      <input_port name="action_name"
                  default="__default__placeholder__"
                  type="std::string">Action server name</input_port>
    </Action>
    <Action ID="Land">
      <input_port name="action_name"
                  default="__default__placeholder__"
                  type="std::string">Action server name</input_port>
    </Action>
    <Action ID="Takeoff">
      <input_port name="alt"
                  type="double">Target takeoff altitude in meter (AMSL)</input_port>
      <input_port name="action_name"
                  default="__default__placeholder__"
                  type="std::string">Action server name</input_port>
    </Action>
  </TreeNodesModel>

</root>
