cmake_minimum_required(VERSION 3.12)
project(auto_apms_core)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclcpp_action REQUIRED)
find_package(action_msgs REQUIRED)
find_package(ament_index_cpp REQUIRED)
find_package(pluginlib REQUIRED)

option(AUTO_APMS_CORE_DEBUG_LOGGING "Enable debug logging severity" ON)
if(AUTO_APMS_CORE_DEBUG_LOGGING)
    add_compile_definitions(_AUTO_APMS_DEBUG_LOGGING)
endif()

#
# ------------ Library --------------
#

add_library(auto_apms_core SHARED
    "src/resources.cpp"

    "src/util/console.cpp"
    "src/util/string.cpp"
)
target_include_directories(auto_apms_core PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)
ament_target_dependencies(auto_apms_core
    rclcpp
    rclcpp_action
    action_msgs
    ament_index_cpp
    pluginlib
)

# Install the version header to the autogenerated headers dir also used by rosidl generators
ament_generate_version_header(auto_apms_core HEADER_PATH "${PROJECT_NAME}/version.hpp")

#
# ------------ Testing --------------
#

if(BUILD_TESTING)
    find_package(auto_apms_interfaces REQUIRED)
    find_package(ament_cmake_gtest REQUIRED)

    ament_add_gtest(${PROJECT_NAME}_unit_tests
        "test/unit/main.cpp"
    )
    ament_target_dependencies(${PROJECT_NAME}_unit_tests
        auto_apms_interfaces
    )
    target_link_libraries(${PROJECT_NAME}_unit_tests
        auto_apms_core
    )
endif()

#
# ------------ Packaging --------------
#

install(
    TARGETS
    auto_apms_core
    EXPORT export_${PROJECT_NAME}
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin)

install(
    DIRECTORY include/${PROJECT_NAME}
    DESTINATION include)

ament_export_targets(export_${PROJECT_NAME} HAS_LIBRARY_TARGET)
ament_export_dependencies(
    rclcpp
    rclcpp_action
    action_msgs
    ament_index_cpp
    pluginlib
)

ament_package()
