cmake_minimum_required(VERSION 3.12)
project(auto_apms_behavior_tree_core)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclcpp_action REQUIRED)
find_package(tinyxml2_vendor REQUIRED)
find_package(behaviortree_cpp REQUIRED)
find_package(auto_apms_util REQUIRED)

#
# ------------ Configuration --------------
#

option(AUTO_APMS_BEHAVIOR_TREE_CORE_DEBUG_LOGGING "Enable debug logging severity" ON)
if(AUTO_APMS_BEHAVIOR_TREE_CORE_DEBUG_LOGGING)
    add_compile_definitions(_AUTO_APMS_DEBUG_LOGGING)
endif()

# Core resources
set(_AUTO_APMS_BEHAVIOR_TREE_CORE__RESOURCE_TYPE_NAME__NODE_MANIFEST "auto_apms_behavior_tree_core__node_manifest")
set(_AUTO_APMS_BEHAVIOR_TREE_CORE__RESOURCE_TYPE_NAME__TREE "auto_apms_behavior_tree_core__tree")

# Node manifest registration parameters
set(_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_CLASS "class_name")
set(_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_PORT "port")
set(_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_WAIT_TIMEOUT "wait_timeout")
set(_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_REQUEST_TIMEOUT "request_timeout")
set(_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_ALLOW_UNREACHABLE "allow_unreachable")

#
# ------------ Library --------------
#

add_library(auto_apms_behavior_tree_core SHARED
    "src/node/node_registration_options.cpp"
    "src/node/node_model_type.cpp"
    "src/node/node_manifest.cpp"
    "src/node/ros_node_context.cpp"
    "src/node/node_registration_loader.cpp"
    "src/tree/script.cpp"
    "src/tree/tree_resource.cpp"
    "src/tree/tree_document.cpp"
    "src/builder.cpp"
    "src/convert.cpp"
)
target_include_directories(auto_apms_behavior_tree_core PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)
target_compile_definitions(auto_apms_behavior_tree_core PRIVATE
    _AUTO_APMS_BEHAVIOR_TREE_CORE__RESOURCE_TYPE_NAME__NODE_MANIFEST="${_AUTO_APMS_BEHAVIOR_TREE_CORE__RESOURCE_TYPE_NAME__NODE_MANIFEST}"
    _AUTO_APMS_BEHAVIOR_TREE_CORE__RESOURCE_TYPE_NAME__TREE="${_AUTO_APMS_BEHAVIOR_TREE_CORE__RESOURCE_TYPE_NAME__TREE}"
    _AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_CLASS="${_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_CLASS}"
    _AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_PORT="${_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_PORT}"
    _AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_WAIT_TIMEOUT="${_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_WAIT_TIMEOUT}"
    _AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_REQUEST_TIMEOUT="${_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_REQUEST_TIMEOUT}"
    _AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_ALLOW_UNREACHABLE="${_AUTO_APMS_BEHAVIOR_TREE_CORE__NODE_MANIFEST_PARAM_ALLOW_UNREACHABLE}"
)
ament_target_dependencies(auto_apms_behavior_tree_core
    rclcpp
    rclcpp_action
    TinyXML2
    behaviortree_cpp
    auto_apms_util
)

# Install the version header to the autogenerated headers dir also used by rosidl generators
ament_generate_version_header(auto_apms_behavior_tree_core HEADER_PATH "${PROJECT_NAME}/version.hpp")

#
# ------------ Utility Executables --------------
#

# Merge multiple node manifest files to a single one and collect the shared library paths for the required nodes
add_executable(create_node_manifest "src/cli/create_node_manifest.cpp")
target_link_libraries(create_node_manifest auto_apms_behavior_tree_core)

# Generate the node model according to a node manifest
add_executable(create_node_model "src/cli/create_node_model.cpp")
target_link_libraries(create_node_model auto_apms_behavior_tree_core)

# Generate a C++ header containing classes for all registered nodes intended to be used with the TreeBuilder API
add_executable(create_node_model_header "src/cli/create_node_model_header.cpp")
target_link_libraries(create_node_model_header auto_apms_behavior_tree_core)

#
# ------------ Packaging --------------
#

# Native behavior tree node model header
set(_native_node_model_header_abs_path__build "${PROJECT_BINARY_DIR}/native_nodes.hpp")
add_custom_command(OUTPUT "${_native_node_model_header_abs_path__build}"
    COMMAND create_node_model_header
        "\"${_native_node_model_header_abs_path__build}\"" # Header output file
    WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
    COMMENT "Generating native behavior tree node model header."
    DEPENDS create_node_model_header
)
add_custom_target(generate_native_node_model_header ALL
    DEPENDS "${_native_node_model_header_abs_path__build}"
)

# Install the native node model header file to this packages install dir
install(
    FILES "${_native_node_model_header_abs_path__build}"
    DESTINATION "include/${PROJECT_NAME}"
)

###### Export libraries ######
install(
    TARGETS
    auto_apms_behavior_tree_core
    EXPORT export_${PROJECT_NAME}
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
)
ament_export_targets(export_${PROJECT_NAME} HAS_LIBRARY_TARGET)
ament_export_dependencies(
    rclcpp
    rclcpp_action
    TinyXML2
    behaviortree_cpp
    auto_apms_util
)

install(
    TARGETS
    create_node_manifest
    create_node_model
    create_node_model_header
    DESTINATION "lib/${PROJECT_NAME}"
)

install(
    DIRECTORY "include/${PROJECT_NAME}"
    DESTINATION "include"
)

install(
    DIRECTORY "cmake"
    DESTINATION "share/${PROJECT_NAME}"
)

ament_package(CONFIG_EXTRAS "auto_apms_behavior_tree_core-extras.cmake.in")
