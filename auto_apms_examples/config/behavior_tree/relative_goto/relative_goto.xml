<?xml version="1.0" encoding="UTF-8"?>
<root BTCPP_format="4"
      main_tree_to_execute="RelativeGoTo">
  <BehaviorTree ID="RelativeGoTo">
    <SequenceWithMemory>
      <ReadGlobalPosition pos_vec="{pos_vec}"
                          alt="{alt}"
                          lat="{lat}"
                          lon="{lon}"
                          topic_name=""
                          _onSuccess="new_alt := alt + 10;&#10;new_lon := lon + 0.0001"/>
      <Arm name="ArmInstance"
           wait_until_ready_to_arm="true"
           action_name=""/>
      <Takeoff alt="{new_alt}"
               action_name=""/>
      <GoTo lat="{lat}"
            lon="{new_lon}"
            alt="{new_alt}"
            action_name=""/>
      <Land action_name=""/>
      <Disarm action_name=""/>
    </SequenceWithMemory>
  </BehaviorTree>

  <!-- Description of Node Models (used by Groot) -->
  <TreeNodesModel>
    <Action ID="Arm">
      <input_port name="wait_until_ready_to_arm"
                  default="true"
                  type="bool">Wait for the UAV to be ready for arming. If false and UAV is not ready to arm, will be rejected.</input_port>
      <input_port name="action_name"
                  type="std::string">Action server name</input_port>
    </Action>
    <Action ID="Disarm">
      <input_port name="action_name"
                  type="std::string">Action server name</input_port>
    </Action>
    <Action ID="GoTo">
      <input_port name="lat"
                  type="double">Target latitude</input_port>
      <input_port name="lon"
                  type="double">Target longitude</input_port>
      <input_port name="alt"
                  type="double">Target altitude in meter (AMSL)</input_port>
      <input_port name="action_name"
                  type="std::string">Action server name</input_port>
    </Action>
    <Action ID="Land">
      <input_port name="action_name"
                  type="std::string">Action server name</input_port>
    </Action>
    <Condition ID="ReadGlobalPosition">
      <output_port name="pos_vec"
                   default="{pos_vec}"
                   type="Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;">Current global position vector (latitude [째], longitude [째], altitude AMSL [m])</output_port>
      <output_port name="alt"
                   default="{alt}"
                   type="double">Current altitude in meter (AMSL)</output_port>
      <output_port name="lat"
                   default="{lat}"
                   type="double">Current latitude in degree [째]</output_port>
      <output_port name="lon"
                   default="{lon}"
                   type="double">Current longitude in degree [째]</output_port>
      <input_port name="topic_name"
                  type="std::string">Topic name</input_port>
    </Condition>
    <Action ID="Takeoff">
      <input_port name="alt"
                  type="double">Target takeoff altitude in meter (AMSL)</input_port>
      <input_port name="action_name"
                  type="std::string">Action server name</input_port>
    </Action>
  </TreeNodesModel>

</root>
