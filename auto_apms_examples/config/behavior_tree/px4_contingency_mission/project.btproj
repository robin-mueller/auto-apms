<?xml version="1.0" encoding="UTF-8"?>
<root BTCPP_format="4" project_name="px4_contingency_mission">
    <include path="bringup.xml"/>
    <include path="contingency/contingency_hold.xml"/>
    <include path="mission.xml"/>
    <include path="shutdown.xml"/>
    <!-- Description of Node Models (used by Groot) -->
    <TreeNodesModel>
        <Action ID="Arm">
            <input_port name="wait_until_ready_to_arm" default="true" type="bool">Wait for the UAV to be ready for arming. If false and UAV is not ready to arm, will be rejected.</input_port>
            <input_port name="action_name" type="std::string">Action server name</input_port>
        </Action>
        <Action ID="Disarm">
            <input_port name="action_name" type="std::string">Action server name</input_port>
        </Action>
        <Action ID="EnableHold">
            <input_port name="action_name" type="std::string">Action server name</input_port>
        </Action>
        <Action ID="GoTo">
            <input_port name="lat" type="double">Target latitude</input_port>
            <input_port name="lon" type="double">Target longitude</input_port>
            <input_port name="alt" type="double">Target altitude in meter (AMSL)</input_port>
            <input_port name="action_name" type="std::string">Action server name</input_port>
        </Action>
        <Action ID="GoToVector">
            <input_port name="lat" type="double">Target latitude</input_port>
            <input_port name="lon" type="double">Target longitude</input_port>
            <input_port name="alt" type="double">Target altitude in meter (AMSL)</input_port>
            <input_port name="action_name" type="std::string">Action server name</input_port>
        </Action>
        <Action ID="Land">
            <input_port name="action_name" type="std::string">Action server name</input_port>
        </Action>
        <Action ID="Mission">
            <input_port name="do_restart" default="false" type="bool">Wether to restart (true) or resume (false) the mission.</input_port>
            <input_port name="action_name" type="std::string">Action server name</input_port>
        </Action>
        <Action ID="RTL">
            <input_port name="action_name" type="std::string">Action server name</input_port>
        </Action>
        <Condition ID="ReadGlobalPosition">
            <output_port name="pos_vec" default="{pos_vec}" type="Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;">Current global position vector (latitude [째], longitude [째], altitude AMSL [m])</output_port>
            <output_port name="alt" default="{alt}" type="double">Current altitude in meter (AMSL)</output_port>
            <output_port name="lat" default="{lat}" type="double">Current latitude in degree [째]</output_port>
            <output_port name="lon" default="{lon}" type="double">Current longitude in degree [째]</output_port>
            <input_port name="topic_name" type="std::string">Topic name</input_port>
        </Condition>
        <Action ID="Takeoff">
            <input_port name="alt" type="double">Target takeoff altitude in meter (AMSL)</input_port>
            <input_port name="action_name" type="std::string">Action server name</input_port>
        </Action>
    </TreeNodesModel>
</root>
