name: ROS 2

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"

jobs:
  build_and_test: # Iterates over all supported ROS 2 distributions.
    name: Build and Test (${{ matrix.ros_distribution }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ros_distribution:
          - jazzy
          - kilted
          - rolling

        # Define the Docker image(s) associated with each ROS distribution.
        # The include syntax allows additional variables to be defined, like
        # docker_image in this case. See documentation:
        # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-including-configurations-in-a-matrix-build
        #
        # Platforms are defined in REP 3 and REP 2000:
        # https://ros.org/reps/rep-0003.html
        # https://ros.org/reps/rep-2000.html
        include:
          # Jazzy Jalisco (May 2024 - May 2029)
          - docker_image: ubuntu:noble
            ros_distribution: jazzy

          # Kilted Kaiju (May 2025 - November 2026)
          - docker_image: ubuntu:noble
            ros_distribution: kilted

          # Rolling Ridley (No End-Of-Life)
          - docker_image: ubuntu:noble
            ros_distribution: rolling

    container:
      image: ${{ matrix.docker_image }}
      env:
        PIP_BREAK_SYSTEM_PACKAGES: 1 # Allow pip to install system packages if needed.
    steps:
      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build and Test
        id: ros-build
        uses: ros-tooling/action-ros-ci@v0.4
        with:
          import-token: ${{ secrets.GITHUB_TOKEN }}
          target-ros2-distro: ${{ matrix.ros_distribution }}
          coverage-result: false
          colcon-defaults: |
            {
              "build": {
                "cmake-args": [
                  "-DCMAKE_BUILD_TYPE=Release",
                  "-DBUILD_TESTING=ON"
                ]
              },
              "test": {
                "ctest-args": [
                  "-R", "auto_apms_.*_unit_tests"
                ]
              }
            }
      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: colcon-logs-${{ matrix.ros_distribution }}
          path: ${{ steps.ros-build.outputs.ros-workspace-directory-name }}/log
        if: always() # upload the logs even when the build fails

  update_node_reference:
    name: Update BT Node Reference Docs
    runs-on: ubuntu-latest
    needs: build_and_test # Only run this job after the build_and_test job has completed successfully.
    if: github.event_name == 'push' # Don't run this job on pull requests, only on pushes.
    container:
      image: ubuntu:noble
      env:
        PIP_BREAK_SYSTEM_PACKAGES: 1 # Allow pip to install system packages if needed.
    steps:
      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: rolling

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build workspace
        id: ros-build
        uses: ros-tooling/action-ros-ci@v0.4
        with:
          import-token: ${{ secrets.GITHUB_TOKEN }}
          target-ros2-distro: rolling
          coverage-result: false
          colcon-defaults: |
            {
              "build": {
                "cmake-args": [
                  "-DCMAKE_BUILD_TYPE=Release",
                  "-DBUILD_TESTING=OFF"
                ]
              }
            }


      - name: Generate Behavior Tree Node Reference
        shell: bash
        run: |
          source ${{ steps.ros-build.outputs.ros-workspace-directory-name }}/install/setup.bash
          ros2 run auto_apms_behavior_tree_core create_node_reference_markdown create_node_reference_markdown_output.md include_native auto_apms_behavior_tree::behavior_tree_nodes auto_apms_simulation::behavior_tree_nodes

      - name: Checkout Documentation Repo
        uses: actions/checkout@v4
        with:
          repository: robin-mueller/auto-apms-guide
          token: ${{ secrets.DOCS_REPO_PAT }}
          path: docs-repo
          ref: master

      - name: Copy Updated Docs
        run: |
          cp create_node_reference_markdown_output.md docs-repo/src/reference/create_node_reference_markdown_output.md

      - name: Commit and Push Documentation
        run: |
          cd docs-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update behavior tree node reference"
            git push
          fi